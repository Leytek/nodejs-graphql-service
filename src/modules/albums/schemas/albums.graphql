type Album {
    id: ID!
    name: String
    released: Int
    artists: [Artist]
    bands: [Band]
    tracks: [Track]
    genres: [Genre]
    image: String
}

type DeletedAlbum {
    acknowledged: Boolean
    deletedCount: Int
}

input AlbumInput {
    released: Int
    artistsIds: [ID]
    bandsIds: [ID]
    genresIds: [ID]
    trackIds: [ID]
    image: String
}

type Query {
    album(id: ID!): Album
    albums(limit: Int, offset: Int, _id: ID, name: String, input: AlbumInput): [Album]
}

type Mutation {
    createAlbum(name: String!, input: AlbumInput): Album
    deleteAlbum(id: ID!): DeletedAlbum
    updateAlbum(id: ID!, name: String, input: AlbumInput): Album
}
